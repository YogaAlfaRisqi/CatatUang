model User {
  id                    String                 @id @default(cuid())
  email                 String                 @unique
  password              String?
  provider              AuthProvider           @default(EMAIL)
  providerId            String?
  emailVerified         Boolean                @default(false)
  status                UserStatus             @default(ACTIVE)
  lastLoginAt           DateTime?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  deletedAt             DateTime?
  budgets               Budget[]
  categories            Category[]
  goals                 Goal[]
  notifications         Notification[]
  paymentMethods        PaymentMethod[]
  recurringTransactions RecurringTransaction[]
  transactions          Transaction[]
  sessions              Session[]
  profile               UserProfile?
  settings              UserSettings?

  @@index([email])
  @@index([provider])
  @@index([deletedAt])
  @@map("users")
  @@schema("user")
}

model UserProfile {
  id              String    @id @default(cuid())
  userId          String    @unique
  firstName       String?
  lastName        String?
  fullName        String?
  avatar          String?
  phone           String?   @unique
  dateOfBirth     DateTime?
  gender          String?
  defaultCurrency Currency  @default(IDR)
  language        String    @default("id")
  timezone        String    @default("Asia/Jakarta")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_profiles")
  @@schema("user")
}

model UserSettings {
  id                   String   @id @default(cuid())
  userId               String   @unique
  emailNotifications   Boolean  @default(true)
  pushNotifications    Boolean  @default(true)
  budgetAlerts         Boolean  @default(true)
  goalReminders        Boolean  @default(true)
  budgetAlertThreshold Int      @default(80)
  showDecimal          Boolean  @default(true)
  darkMode             Boolean  @default(false)
  shareStatistics      Boolean  @default(false)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_settings")
  @@schema("user")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  token        String   @unique
  refreshToken String?  @unique
  deviceInfo   Json?
  ipAddress    String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@map("sessions")
  @@schema("user")
}
